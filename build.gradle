buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.2.RELEASE'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.12.0'
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'com.github.ben-manes.versions'

jar {
    baseName = 'yagga'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    generatedSources = 'src-gen'
    generatedAsserionsSources = file("${generatedSources}/assertj-assertions")
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://maven.atlassian.com/content/repositories/atlassian-public"
    }
}

configurations {
    customAssertionsGenerate
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web', { exclude module: 'spring-boot-starter-tomcat' }
    compile 'org.springframework.boot:spring-boot-starter-jetty'
    compile 'org.apache.commons:commons-exec:1.3'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'com.atlassian.stash:stash-java-client-httpclient:1.5.0'
    compile 'com.google.code.gson:gson:2.6.2'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.assertj:assertj-core:3.3.0'

    customAssertionsGenerate 'org.assertj:assertj-assertions-generator:2.0.0'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}

sourceSets {
    test {
        java {
            srcDir generatedAsserionsSources
        }
    }
}

bootRun {
    systemProperties = System.properties
}

task generateCustomAssertions(dependsOn: [compileJava], type: JavaExec) {
    doFirst {
        generatedAsserionsSources.delete()
        generatedAsserionsSources.mkdirs()
    }

    inputs.dir sourceSets.main.output.classesDir
    outputs.dir generatedAsserionsSources

    classpath configurations.customAssertionsGenerate, sourceSets.main.runtimeClasspath
    workingDir generatedAsserionsSources

    main = 'org.assertj.assertions.generator.cli.AssertionGeneratorLauncher'
    args = ['org.yu55.yagga.api.grep.model', 'org.yu55.yagga.api.annotate.model']

    logging.captureStandardOutput LogLevel.INFO
    debug false
}

task cleanGeneratedSources(type: Delete) {
    delete generatedSources
}

clean.dependsOn cleanGeneratedSources
compileTestJava.dependsOn generateCustomAssertions
